#cat 
you can view multiple files at the same time.
$ cat file1 file2
$cat -n /etc/logrotate.conf
While displaying the file, following cat -n command will prepend the line number to each line of the output.

Combine 2 test files to another file:
$ cat list1.txt list2.txt > todo.txt


#cp
Copy file1 to file2 preserving the mode, ownership and timestamp.
$ cp -p file1 file2

Copy file1 to file2. if file2 exists prompt for confirmation before overwritting it.
$ cp -i file1 file2


#chmod
	chmod command is used to change the permissions for a file or directory.

Give full access to user and group (i.e read, write and execute ) on a specific file.
$ chmod ug+rwx file.txt

Revoke all access for the group (i.e read, write and execute ) on a specific file.
$ chmod g-rwx file.txt

Apply the file permissions recursively to all the files in the sub-directories.
$ chmod -R ug+rwx file.txt

#chown
chown command is used to change the owner and group of a file. \
To change owner to oracle and group to db on a file. i.e Change both owner and group at the same time.
$ chown oracle:dba dbora.sh

Use -R to change the ownership recursively.
$ chown -R oracle:dba /home/oracle

#diff  compares two text files
	The -y (side by side) option shows the line differences side by side. 
	The -w (width) option lets you specify the maximum line width to use to avoid wraparound lines. 
	The two files are called alpha1.txt and alpha2.txt in this example. 
	The --suppress-common-lines prevents diff from listing the matching lines, letting you focus on the lines which have differences.
diff -y -W 70 file1.txt file2.txt --suppress-common-lines

# echo
echo a string of text
echo $USER
echo $HOME
echo $PATH

#exit
exit

# find file 
#We do this using the -type option with the f parameter. The f parameter stands for files.
$ find . -type f -name *ones*
$ find . -iname *wild*  
$ find -iname "MyCProgram.c"
#-iname (insensitive name) option

Find all empty files in home directory
$ find ~ -empty
#Q.Write a command that will look for files with an extension "c", and has the occurrence of the string "apple" in it.
$ Find ./ -name "*.c" | xargs grep –i "apple"


#groups
The groups command tells you which groups a user is a member of.
$groups dave
$groups russel

#grep 
Search for a given string in a file (case in-sensitive search). 
$ grep -i "the" demo_file

Print the matched line, along with the 3 lines after it.
$ grep -A 3 -i "example" demo_text

Search for a given string in all files recursively
$ grep -r "russel" *
Q.Case insensitive search > you can force grep to ignore word case i.e match boo, Boo, BOO
$ grep -i “boo” /file
Q. Searching in all files recursively using grep –r
$ grep -r 'word' /path/to/file
Q. String count
$ grep -c 'go' /path/to/file   output: 6


#gzip
gzip core.c  >create a zip file and remove original
gzip -k core.c> it retain both the original and compressed version

#head 
	The head command gives you a listing of the first 10 lines of a file. 
	If you want to see fewer or more lines, use the -n (number) option.
head -core.c
head -n 5 core.c

#history
	The history command shows a list of the commands entered since you started the session. 
	The joy of history is that now you can replay any of them by using a command such as:
$ history > all command
$!3   >rank of command
$ !!   >last command
$ history | grep dnf >search command

#ifconfig
$ ifconfig -a
view or configure a network interface on the Linux
$ifconfig eth0 up or ifconfig eth0 down
here eth0 is the network card

#mkdir
	creates a directory called temp under your home directory.
$ mkdir ~/temp

# mv
	The mv command allows you to move files and directories from directory to directory. It also allows you to rename files.
$mv ~/Documents/Ukulele/Apache.pdf .    > . means current directory
$mv ~/Documents/Ukulele/Apache.pdf ./The_Shadows_Apache.pdf  >rename the file in current directory


#passwd
	The passwd command lets you change the password for a user. Just type passwd to change your own password.


$sudo passwd russel
$ passwd -d USERNAME 
remove password for a specific user.

#ping
check connection between client/server with ip address or dns name.
Ping a remote host by sending only 5 packets.
$ ping -c 5 gmail.com


#ps
	The ps command lists running processes. Using ps without any options causes it to list the processes running in the current shell.
$ps
$ps -u russel | less
	To see all the processes related to a particular user, use the -u (user) option. This is likely to be a long list, so for convenience pipe it through less.
# lists running processes
$ps –aux  or $ps ux
$sudo ps –a

##search for a particular Unix process using 
$ ps aux | grep firefox  or  pidof firefox  output get PID(process id)
$ sudo ps aux | grep httpd or ps –ef |grep httpd

##Kill the process using PID
$ sudo kill 3486  or $ sudo kill -9 3486 or #kill 3486

# pwd = current directory
$ pwd

#rm
Get confirmation before removing the file.
$ rm -i filename.txt

Print the filename and get confirmation before removing the file.
$ rm -i file*

#tar

Create a new tar archive.
$ tar cvf archive_name.tar dirname/

Extract from an existing tar archive.
$ tar xvf archive_name.tar

View an existing tar archive.
$ tar tvf archive_name.tar
Create a tar archive and extract
$ tar cvf file.tar direname/ >create
$ gzip test.txt/ >create *.gz file
$ tar xvf file.tar direname >extract
$ gzip –d test.txt.gz  or unzip test.zip >extract


#ssh
Display ssh client version
$ ssh -V
output: OpenSSH_3.9p1, OpenSSL 0.9.7a Feb 19 2003
$ ssh –l jsmith remotehost.com

#Sort 
a file in ascending order
$ sort names.txt

Sort a file in descending order
$ sort -r names.txt


#su
Switch to a different user account using su command. Super user can switch to any other user without entering their password.
$ su - USERNAME


#uname
	You can obtain some system information regarding the Linux computer you’re working on with the uname command.

Use the -a (all) option to see everything.
Use the -s (kernel name) option to see the type of kernel.
Use the -r (kernel release) option to see the kernel release.
Use the -v (kernel version) option to see the kernel version.

$uname -a
$uanme -s
$uname -r
$uname -v


#whoami
Use whoami to find out who you are logged in
$whoami
#echo $USER or echo "$USER"
#who

Now that we know who this user is, we can obtain more information about them. The id command is a good place to start.
$id
$groups russel

## Q.WC Command for word count
$ wc file.txt   , for line#> $wc –l file.txt, for word#> $wc –w file.txt, for bytes> $ wc –c file.txt.
12  16  112  file.txt    here, 12 > line#, 16>word#, 112>bytes

# ADD USER
$ sudo useradd russel
$ sudo passwd abc123
$ sudo useradd russel -p abc123  >in a single line

# Create GROUP
$ sudo groupadd tester

add user to the group
$ sudo usermod -a -G tester russel
The -a option tells usermod we are appending and the -G option tells usermod we are appending to the group name that follows the option.

#find the group member
$ grep tester /etc/group

#another way to find memeber 
$ sudo apt-get install members
$ members tester

########################
Network

#FTP
$ ftp domain.com
$ ftp 192.168.0.1
$ ftp user@ftpdomain.com

###Downloading files with FTP
Before downloading a file, we should set the local FTP file download directory by using 'lcd' command:

$ lcd /home/user/yourdirectoryname
If you dont specify the download directory, the file will be downloaded to the current directory where you were at the time you started the FTP session.

Now, we can use the command 'get' command to download a file, the usage is:

$get file

The file will be downloaded to the directory previously set with the 'lcd' command.

###Uploading Files with FTP

We can upload files that are in the local directory where we made the FTP connection.
To upload a file, we can use 'put' command.

$ put file
When the file that you want to upload is not in the local directory, you can use the absolute path starting with "/" as well:

$ put /path/file
To upload several files we can use the mput command similar to the mget example from above:

$ mput *.xls

###Closing the FTP connection
Once we have done the FTP work, we should close the connection for security reasons. There are three commands that we can use to close the connection:

$ bye
$ exit
$ quit
note: Any of them will disconnect our PC from the FTP server and will return:
output:
221 Goodbye
If you need some additional help, once you are connected to the FTP server, type 'help' and this will show you all the available FTP commands.
